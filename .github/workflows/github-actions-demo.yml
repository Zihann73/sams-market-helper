name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      region:
        required: true
        type: string
        default: global
        description: deploy region
      stage:
        required: true
        type: string
        default: staging
        description: deploy stage
      service:
        required: true
        type: string
        default: api
        description: deploy service
  workflow_dispatch:
    inputs:
      region:
        required: true
        type: choice
        default: global
        description: deploy region
        options:
          - global
          - cn
      stage:
        required: true
        type: choice
        default: production
        description: deploy stage
        options:
          - production
          - staging
      service:
        required: true
        type: choice
        default: api
        description: deploy service
        options:
          - api
          - document

jobs:
  deploy-global:
    if: inputs.region=='global'
    runs-on: ubuntu-latest
    steps:
      - name: ssh deploy production
        if: inputs.service=='api' && inputs.stage=='production'
        run: |
          echo ${PWD}
          sh status-check.sh
      - name: ssh deploy staging
        if: inputs.service=='api' && inputs.stage=='staging'
        run: |
          i=0
          flag=false
          while [ "$i" -lt 3 ]
          do
            sleep 1
            CODE=`curl -I 'https://stgapi.d1.run/api/Studio' 2>/dev/null | head -n 1 | cut -d$' ' -f2`
            echo $CODE
            if [ $CODE == "200" ]; then
              flag=true
              break
            fi
            i=`expr $i + 1`
          done
          if [ $flag == "false" ]; then
            echo "status=DOWN" >> $GITHUB_ENV; else
            echo "status=UP" >> $GITHUB_ENV
          fi
      - name: show env
        if: env.status == 'DOWN'
        run: |
          echo ${{ env.status }}
      - name: exit check
        if: env.status == 'DOWN'
        run: |
          echo "::error title=msg::'service unavailable'"
          exit 1
  deploy-cn:
    if: inputs.region=='cn'
    runs-on: ubuntu-latest
    steps:
      - name: ssh deploy production
        if: inputs.service=='api' && inputs.stage=='production'
        run: |
          i=0
          flag=false
          while [ "$i" -lt 3 ]
          do
            sleep 1
            CODE=`curl -I 'https://api.wooah.cn/api/Studio' 2>/dev/null | head -n 1 | cut -d$' ' -f2`
            echo $CODE
            if [ $CODE == "200" ]; then
              flag=true
              break
            fi
            i=`expr $i + 1`
          done
          if [ $flag == "false" ]; then
            echo "status=DOWN" >> $GITHUB_ENV; else
            echo "status=UP" >> $GITHUB_ENV
          fi
      - name: ssh deploy staging
        if: inputs.service=='api' && inputs.stage=='staging'
        run: |
          i=0
          flag=false
          while [ "$i" -lt 3 ]
          do
            sleep 1
            CODE=`curl -I 'https://stgapi.wooah.cn/api/Studio' 2>/dev/null | head -n 1 | cut -d$' ' -f2`
            echo $CODE
            if [ $CODE == "200" ]; then
              flag=true
              break
            fi
            i=`expr $i + 1`
          done
          if [ $flag == "false" ]; then
            echo "status=DOWN" >> $GITHUB_ENV; else
            echo "status=UP" >> $GITHUB_ENV
          fi
      - name: show env
        if: env.status == 'DOWN'
        run: |
          echo ${{ env.status }}
      - name: exit check
        if: env.status == 'DOWN'
        run: |
          echo "::error title={title}::service unavailable"
          exit 1
